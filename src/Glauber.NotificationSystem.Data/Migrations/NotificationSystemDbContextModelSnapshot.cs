// <auto-generated />
using System;
using Glauber.NotificationSystem.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Glauber.NotificationSystem.Data.Migrations
{
    [DbContext(typeof(NotificationSystemDbContext))]
    partial class NotificationSystemDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.ActiveChannels", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppId")
                        .HasColumnType("int");

                    b.Property<bool>("Email")
                        .HasColumnType("bit");

                    b.Property<bool>("SMS")
                        .HasColumnType("bit");

                    b.Property<bool>("WebPush")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AppId")
                        .IsUnique();

                    b.ToTable("ActiveChannels");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.App", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AppName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AppToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Apps");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.Email.EmailTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmailSettingsId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmailSettingsId");

                    b.ToTable("EmailTemplate");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.Email.Sender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmailSettingsId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmailSettingsId")
                        .IsUnique();

                    b.ToTable("Sender");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.Email.Server", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmailSettingsId")
                        .HasColumnType("int");

                    b.Property<string>("SmtpName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmtpPort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserLogin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmailSettingsId")
                        .IsUnique();

                    b.ToTable("Server");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.EmailNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppId")
                        .HasColumnType("int");

                    b.Property<bool>("Clicked")
                        .HasColumnType("bit");

                    b.Property<string>("EmailTemplateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Opened")
                        .HasColumnType("bit");

                    b.Property<bool>("Received")
                        .HasColumnType("bit");

                    b.Property<string>("ReceiverEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppId");

                    b.ToTable("EmailNotifications");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.EmailSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppId")
                        .IsUnique();

                    b.ToTable("EmailSettings");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.SMS.SMSProvider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SMSSettingsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SMSSettingsId")
                        .IsUnique();

                    b.ToTable("SMSProvider");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.SMSNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppId")
                        .HasColumnType("int");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppId");

                    b.ToTable("SMSNotifications");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.SMSSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppId")
                        .IsUnique();

                    b.ToTable("SMSSettings");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.WebPush.AllowNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AllowButtonText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DenyButtonText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WebPushSettingsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WebPushSettingsId")
                        .IsUnique();

                    b.ToTable("AllowNotification");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.WebPush.Site", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WebPushSettingsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WebPushSettingsId")
                        .IsUnique();

                    b.ToTable("Site");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.WebPush.WelcomeNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EnableUrlRedirect")
                        .HasColumnType("int");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlRedirect")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WebPushSettingsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WebPushSettingsId")
                        .IsUnique();

                    b.ToTable("WelcomeNotification");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.WebPushNotification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppId")
                        .HasColumnType("int");

                    b.Property<string>("AudienceSegments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IconUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RedirectUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppId");

                    b.ToTable("WebPushNotifications");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.WebPushSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppId")
                        .IsUnique();

                    b.ToTable("WebPushSettings");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.ActiveChannels", b =>
                {
                    b.HasOne("Glauber.NotificationSystem.Business.Entities.App", "App")
                        .WithOne("ActiveChannels")
                        .HasForeignKey("Glauber.NotificationSystem.Business.Entities.ActiveChannels", "AppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("App");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.Email.EmailTemplate", b =>
                {
                    b.HasOne("Glauber.NotificationSystem.Business.Entities.EmailSettings", "EmailSettings")
                        .WithMany("EmailTemplates")
                        .HasForeignKey("EmailSettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmailSettings");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.Email.Sender", b =>
                {
                    b.HasOne("Glauber.NotificationSystem.Business.Entities.EmailSettings", "EmailSettings")
                        .WithOne("Sender")
                        .HasForeignKey("Glauber.NotificationSystem.Business.Entities.Email.Sender", "EmailSettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmailSettings");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.Email.Server", b =>
                {
                    b.HasOne("Glauber.NotificationSystem.Business.Entities.EmailSettings", "EmailSettings")
                        .WithOne("Server")
                        .HasForeignKey("Glauber.NotificationSystem.Business.Entities.Email.Server", "EmailSettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmailSettings");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.EmailNotification", b =>
                {
                    b.HasOne("Glauber.NotificationSystem.Business.Entities.App", "App")
                        .WithMany("EmailNotification")
                        .HasForeignKey("AppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("App");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.EmailSettings", b =>
                {
                    b.HasOne("Glauber.NotificationSystem.Business.Entities.App", "App")
                        .WithOne("EmailSettings")
                        .HasForeignKey("Glauber.NotificationSystem.Business.Entities.EmailSettings", "AppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("App");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.SMS.SMSProvider", b =>
                {
                    b.HasOne("Glauber.NotificationSystem.Business.Entities.SMSSettings", "SMSSettings")
                        .WithOne("SMSProvider")
                        .HasForeignKey("Glauber.NotificationSystem.Business.Entities.SMS.SMSProvider", "SMSSettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SMSSettings");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.SMSNotification", b =>
                {
                    b.HasOne("Glauber.NotificationSystem.Business.Entities.App", "App")
                        .WithMany("SMSNotification")
                        .HasForeignKey("AppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("App");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.SMSSettings", b =>
                {
                    b.HasOne("Glauber.NotificationSystem.Business.Entities.App", "App")
                        .WithOne("SMSSettings")
                        .HasForeignKey("Glauber.NotificationSystem.Business.Entities.SMSSettings", "AppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("App");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.WebPush.AllowNotification", b =>
                {
                    b.HasOne("Glauber.NotificationSystem.Business.Entities.WebPushSettings", "WebPushSettings")
                        .WithOne("AllowNotification")
                        .HasForeignKey("Glauber.NotificationSystem.Business.Entities.WebPush.AllowNotification", "WebPushSettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WebPushSettings");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.WebPush.Site", b =>
                {
                    b.HasOne("Glauber.NotificationSystem.Business.Entities.WebPushSettings", "WebPushSettings")
                        .WithOne("Site")
                        .HasForeignKey("Glauber.NotificationSystem.Business.Entities.WebPush.Site", "WebPushSettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WebPushSettings");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.WebPush.WelcomeNotification", b =>
                {
                    b.HasOne("Glauber.NotificationSystem.Business.Entities.WebPushSettings", "WebPushSettings")
                        .WithOne("WelcomeNotification")
                        .HasForeignKey("Glauber.NotificationSystem.Business.Entities.WebPush.WelcomeNotification", "WebPushSettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WebPushSettings");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.WebPushNotification", b =>
                {
                    b.HasOne("Glauber.NotificationSystem.Business.Entities.App", "App")
                        .WithMany("WebPushNotification")
                        .HasForeignKey("AppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("App");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.WebPushSettings", b =>
                {
                    b.HasOne("Glauber.NotificationSystem.Business.Entities.App", "App")
                        .WithOne("WebPushSettings")
                        .HasForeignKey("Glauber.NotificationSystem.Business.Entities.WebPushSettings", "AppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("App");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.App", b =>
                {
                    b.Navigation("ActiveChannels")
                        .IsRequired();

                    b.Navigation("EmailNotification");

                    b.Navigation("EmailSettings");

                    b.Navigation("SMSNotification");

                    b.Navigation("SMSSettings");

                    b.Navigation("WebPushNotification");

                    b.Navigation("WebPushSettings");
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.EmailSettings", b =>
                {
                    b.Navigation("EmailTemplates");

                    b.Navigation("Sender")
                        .IsRequired();

                    b.Navigation("Server")
                        .IsRequired();
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.SMSSettings", b =>
                {
                    b.Navigation("SMSProvider")
                        .IsRequired();
                });

            modelBuilder.Entity("Glauber.NotificationSystem.Business.Entities.WebPushSettings", b =>
                {
                    b.Navigation("AllowNotification")
                        .IsRequired();

                    b.Navigation("Site")
                        .IsRequired();

                    b.Navigation("WelcomeNotification")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
